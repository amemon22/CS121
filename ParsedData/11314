Coding Standards 

The following coding standards were used for an earlier
course. 
You are not obligated to use these standards,
but you should develop and maintain some
reasonable set of standards and stick with them.


 Each source module will contain at most ten procedures
     of similar function (as indicated by the module name). 
     The procedures within a module must be separated by
     several blank lines.
 Each procedure will contain a header comment
     identifying the procedure by name and function.
 Each procedure will contain at most 100 lines of executable code,
     not counting comments or declarations.

Use variable names which are meaningful.
 No comment will continue across line boundaries. 
     Close the comment at the end of a line and open it again
     on the next line.
 At most one statement will occur on a line. 
     If a statement spans several lines,
     it will be indented in a consistent fashion
     (to indicate continuation).
 Blank lines and extra spaces will be used freely to increase 
     readability. 
     In particular, the assignment operator (=) will
     always be enclosed in spaces. 
     Use parentheses for clarity.
 The use of the GOTO statement is very strongly discouraged.
 No string constant will be split between two lines.
 No code may succeed a `{' nor precede a `}'
     on a line.
 All programs will be indented in the following manner:
      Each `}' will be in the same column as
            the beginning of the text of the line containing
            the `{' that it closes.
        In an if-then-else construct,
            the else will start in the same column as
            the if.
        Statements immediately contained within a bracketed pair
            will all start in the same column, and that column will be 
            indented consistently to the right of the bracketing
            statement's starting column by two to five spaces. 
            Note that, of course, the contents between the bracketing
            statements will have to be indented with respect to the
            outer indentation.   For example,


	if (x == 5) {
	     y = 7;
	     printf("x is five\n");
	}
	else {
	     y = 10;
	     printf("x is not five\n");
	}

     






Dan Hirschberg  
Computer Science Department
University of California, Irvine, CA 92697-3435

dan (at) ics.uci.edu
Last modified: Mar 22, 1999